<?php

namespace Ilcfrance\Orangetools\DataBundle\EntityRepository;

use Ilcfrance\Orangetools\DataBundle\Entity\Groupmodule;

/**
 * ModuleformationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ModuleformationRepository extends \Doctrine\ORM\EntityRepository
{

	/**
	 * Count All
	 *
	 * @return Ambigous <\Doctrine\ORM\mixed, mixed, multitype:, \Doctrine\DBAL\Driver\Statement,
	 *		 \Doctrine\Common\Cache\mixed>
	 */
	public function count()
	{
		$qb = $this->createQueryBuilder('mf')->select('count(mf)');
		$query = $qb->getQuery();

		return $query->setCacheable('true')->useQueryCache(true)->useResultCache(true)->getSingleScalarResult();
	}

	/**
	 * Get Query for All Entities
	 *
	 * @return \Doctrine\ORM\Query
	 */
	public function getAllQuery()
	{
		$qb = $this->createQueryBuilder('mf')
			->join('mf.groupmodule', 'gm')
			->orderBy('gm.name', 'ASC')
			->addOrderBy('mf.code', 'ASC');
		$query = $qb->getQuery();

		return $query;
	}

	/**
	 * Get All Entities
	 *
	 * @return Ambigous <\Doctrine\ORM\mixed,
	 *		 \Doctrine\ORM\Internal\Hydration\mixed,
	 *		 \Doctrine\DBAL\Driver\Statement,
	 *		 \Doctrine\Common\Cache\mixed>
	 */
	public function getAll()
	{
		return $this->getAllQuery()->setCacheable('true')->useQueryCache(true)->useResultCache(true)
		->execute();
	}

	/**
	 * Count All
	 *
	 * @return Ambigous <\Doctrine\ORM\mixed, mixed, multitype:, \Doctrine\DBAL\Driver\Statement,
	 *		 \Doctrine\Common\Cache\mixed>
	 */
	public function countByGroupmodule(Groupmodule $gm)
	{
		$qb = $this->createQueryBuilder('mf')->select('count(mf)')->join('mg.groupmodule', 'gm')->where('gm.id = :gmId')->setParameter('gmId', $gm->getId());
		$query = $qb->getQuery();

		return $query->setCacheable('true')->useQueryCache(true)->useResultCache(true)->getSingleScalarResult();
	}

	/**
	 * Get Query for All Entities
	 *
	 * @return \Doctrine\ORM\Query
	 */
	public function getAllByGroupmoduleQuery(Groupmodule $gm)
	{
		$qb = $this->createQueryBuilder('mf')
			->join('mf.groupmodule', 'gm')
			->where('gm.id = :gmId')
			->setParameter('gmId', $gm->getId())
			->orderBy('gm.name', 'ASC')
			->addOrderBy('mf.code', 'ASC');
		$query = $qb->getQuery();

		return $query;
	}

	/**
	 * Get All Entities
	 *
	 * @return Ambigous <\Doctrine\ORM\mixed,
	 *		 \Doctrine\ORM\Internal\Hydration\mixed,
	 *		 \Doctrine\DBAL\Driver\Statement,
	 *		 \Doctrine\Common\Cache\mixed>
	 */
	public function getAllByGroupmodule(Groupmodule $gm)
	{
		return $this->getAllByGroupmoduleQuery($gm)->setCacheable('true')->useQueryCache(true)->useResultCache(true)
		->execute();
	}
}
